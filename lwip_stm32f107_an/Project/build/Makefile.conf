# Makefile.conf is included at the beginning of the 'Makefile'
#  so that the values may be overridden. 
# Makefile defines SRCS, OBJS, and include directories
#  for the entire project.
# Makefile.common is called at the end of 'Makefile' to 
#  perform compilation, linking, and loading.

NAME = stm32_lwIP

#Derived from ARM GCC example Makefile.conf

# Selecting Core
CORTEX_M = 3

# Use newlib-nano. To disable it, specify USE_NANO=
USE_NANO = --specs=nano.specs

# Use seimhosting or not
USE_SEMIHOST = --specs=rdimon.specs -lc -lrdimon
USE_NOHOST = -lc -lnosys

CORE = CM$(CORTEX_M)

# Compiler & Linker
CC      = $(TOOLPATH)/arm-none-eabi-gcc
CXX     = $(TOOLPATH)/arm-none-eabi-g++
AR      = $(TOOLPATH)/arm-none-eabi-ar
OBJCOPY = $(TOOLPATH)/arm-none-eabi-objcopy
OBJDUMP = $(TOOLPATH)/arm-none-eabi-objdump

# Options for specific architecture
ARCH_FLAGS = -mthumb -mcpu=cortex-m$(CORTEX_M)
ARCH_FLAGS += -DSTM32F10X_CL=1 -DUSE_STDPERIPH_DRIVER=1 -DUSE_STM3210C_EVAL
# -mlittle-endian -mthumb-interwork

# Startup code #STARTUP=$(BASE)/Libraries/CMSIS/Core/CM3/startup/startup_ARM$(CORE).S
## Atollic Blinky .ld script with this CooCox startup.c seems to work... 
## Not sure if it sets up the stack pointer right. (.co_stack)
STARTUP = $(BASE)/Libraries/CMSIS/Core/CM3/startup/gcc/startup_stm32f10x_cl.c
#STARTUP = $(BASE)/Libraries/CMSIS/Core/CM3/startup/gcc/startup_stm32f10x_cl.S

# -Os -ffunction-sections -fdata-sections to compile for code size
CFLAGS = $(ARCH_FLAGS) $(STARTUP_DEFS) -Os 
#-ffunction-sections -fdata-sections 


##DR Browns 
#LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m3 
#CFLAGS+= -DSTM32F10X_CL -DUSE_STDPERIPH_DRIVER $(FULLASSERT)

# Project Includes
#PI = $(BASE)/Project/inc
#P_CMSIS = $(BASE)/Libraries/CMSIS/Core/CM3
#SPL = $(BASE)/Libraries/STM32F10x_StdPeriph_Driver/inc

# Link for code size
#GC = -Wl,--no-gc-sections
GC = -Wl,--gc-sections
### WHY DOES LINK BREAK IF THIS GC SECTION IS REMOVED?!
## Linker garbage collection. improper for it to not work without it.
## https://code.google.com/p/chromium/issues/detail?id=159847

# Create map file
MAP = -Wl,-Map=$(NAME).map
